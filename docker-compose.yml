# version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      TZ: Europe/Kyiv
    ports:
      - '${DB_PORT}:5432'
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    container_name: serverCRM
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
    ports:
      - '3000:3000'
    restart: unless-stopped
    depends_on:
      - postgres
    volumes:
      - ./server:/app
      - server_node_modules:/app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/"]
      interval: 10s
      timeout: 5s
      retries: 5

  client:
    container_name: clientCRM
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - '${CLIENT_PORT}:5173'
    restart: unless-stopped
    depends_on:
      - server
      - postgres
    volumes:
      - ./client:/app
      - client_node_modules:/app/node_modules
    env_file:
      - .env
    environment:
      - VITE_API_URL=http://localhost:3000/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  server_node_modules:
  client_node_modules:
  postgres_data: